//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Telepathy.Internal.BrokerLauncher {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.2.0.0")]
    internal sealed partial class BrokerLauncherSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static BrokerLauncherSettings defaultInstance = ((BrokerLauncherSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new BrokerLauncherSettings())));
        
        public static BrokerLauncherSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int MaxConcurrentSession {
            get {
                return ((int)(this["MaxConcurrentSession"]));
            }
            set {
                this["MaxConcurrentSession"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int BrokerPoolSize {
            get {
                return ((int)(this["BrokerPoolSize"]));
            }
            set {
                this["BrokerPoolSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SessionAddress {
            get {
                return ((string)(this["SessionAddress"]));
            }
            set {
                this["SessionAddress"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string IdentityServerUrl
        {
            get
            {
                return ((string)(this["IdentityServerUrl"]));
            }
            set
            {
                this["IdentityServerUrl"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\services\\registration")]
        public string CCP_SERVICEREGISTRATION_PATH {
            get {
                return ((string)(this["CCP_SERVICEREGISTRATION_PATH"]));
            }
            set {
                this["CCP_SERVICEREGISTRATION_PATH"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection SvcHostList {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["SvcHostList"]));
            }
            set {
                this["SvcHostList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Telepathy")]
        public string ClusterName {
            get {
                return ((string)(this["ClusterName"]));
            }
            set {
                this["ClusterName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ClusterId {
            get {
                return ((string)(this["ClusterId"]));
            }
            set {
                this["ClusterId"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AzureStorageConnectionString {
            get {
                return ((string)(this["AzureStorageConnectionString"]));
            }
            set {
                this["AzureStorageConnectionString"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool EnableAzureStorageQueueEndpoint {
            get {
                return ((bool)(this["EnableAzureStorageQueueEndpoint"]));
            }
            set {
                this["EnableAzureStorageQueueEndpoint"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AsConsole {
            get {
                return ((bool)(this["AsConsole"]));
            }
            set {
                this["AsConsole"] = value;
            }
        }
    }
}
